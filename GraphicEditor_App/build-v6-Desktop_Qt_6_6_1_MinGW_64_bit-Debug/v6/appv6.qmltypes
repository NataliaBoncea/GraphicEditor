import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "colorhistorymodel.h"
        name: "ColorHistoryModel"
        accessSemantics: "reference"
        prototype: "QAbstractListModel"
        exports: ["v6/ColorHistoryModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "historySize"
            type: "int"
            read: "historySize"
            write: "setHistorySize"
            notify: "historySizeChanged"
            index: 0
        }
        Signal { name: "historySizeChanged" }
        Method {
            name: "at"
            type: "QColor"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "append"
            Parameter { name: "newColor"; type: "QColor" }
        }
        Method { name: "clear" }
        Method {
            name: "removeAt"
            Parameter { name: "row"; type: "int" }
        }
    }
    Component {
        file: "colorpickerpreview.h"
        name: "ColorPickerPreview"
        accessSemantics: "reference"
        prototype: "QQuickPaintedItem"
        exports: ["v6/ColorPickerPreview 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "previewSize"
            type: "double"
            read: "previewSize"
            write: "setPreviewSize"
            notify: "previewSizeChanged"
            index: 0
        }
        Property {
            name: "size"
            type: "double"
            read: "size"
            write: "setSize"
            notify: "sizeChanged"
            index: 1
        }
        Property {
            name: "mousePosition"
            type: "QPointF"
            read: "mousePosition"
            write: "setMousePosition"
            notify: "mousePositionChanged"
            index: 2
        }
        Signal { name: "previewSizeChanged" }
        Signal { name: "sizeChanged" }
        Signal { name: "mousePositionChanged" }
        Method {
            name: "setMousePosition"
            Parameter { name: "newMousePosition"; type: "QPointF" }
        }
    }
    Component {
        file: "colorpicker_p.h"
        name: "ColorPicker_p"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["v6/ColorPicker_p 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "color"
            type: "QColor"
            read: "color"
            write: "setColor"
            notify: "colorChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "oldColor"
            type: "QColor"
            read: "oldColor"
            write: "setOldColor"
            notify: "oldColorChanged"
            index: 1
        }
        Property {
            name: "picking"
            type: "bool"
            read: "picking"
            write: "setPicking"
            notify: "pickingChanged"
            index: 2
        }
        Signal { name: "colorChanged" }
        Signal { name: "pickingChanged" }
        Signal { name: "oldColorChanged" }
        Method {
            name: "setColor"
            Parameter { name: "newColor"; type: "QColor" }
        }
        Method {
            name: "eyedrop"
            Parameter { name: "mousePosition"; type: "QPointF" }
        }
        Method {
            name: "setOldColor"
            Parameter { name: "newOldColor"; type: "QColor" }
        }
        Method { name: "startPicking" }
        Method { name: "revertPicking" }
    }
    Component {
        file: "colorsampler_p.h"
        name: "ColorSampler_p"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["v6/ColorSampler_p 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "color"
            type: "QColor"
            read: "color"
            write: "setColor"
            notify: "colorChanged"
            index: 0
        }
        Signal { name: "colorChanged" }
        Method {
            name: "setColor"
            Parameter { name: "newColor"; type: "QColor" }
        }
        Method {
            name: "setRed"
            Parameter { name: "r"; type: "double" }
        }
        Method {
            name: "setGreen"
            Parameter { name: "g"; type: "double" }
        }
        Method {
            name: "setBlue"
            Parameter { name: "b"; type: "double" }
        }
        Method {
            name: "setAlpha"
            Parameter { name: "a"; type: "double" }
        }
        Method {
            name: "setHue"
            Parameter { name: "hue"; type: "double" }
        }
        Method {
            name: "setSaturation"
            Parameter { name: "saturation"; type: "double" }
        }
        Method {
            name: "setValue"
            Parameter { name: "value"; type: "double" }
        }
    }
    Component {
        file: "colorslider_p.h"
        name: "ColorSlider_p"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["v6/ColorSlider_p 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "value"
            type: "double"
            read: "value"
            write: "setValue"
            notify: "valueChanged"
            index: 0
        }
        Signal { name: "valueChanged" }
        Method {
            name: "setValue"
            Parameter { name: "newValue"; type: "double" }
        }
        Method {
            name: "increase"
            Parameter { name: "stepSize"; type: "double" }
        }
        Method {
            name: "decrease"
            Parameter { name: "stepSize"; type: "double" }
        }
    }
    Component {
        file: "colortool_p.h"
        name: "ColorTool_p"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["v6/ColorTool_p 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "primary"
            type: "QColor"
            read: "primary"
            write: "setPrimary"
            notify: "primaryChanged"
            index: 0
            isFinal: true
        }
        Property {
            name: "secondary"
            type: "QColor"
            read: "secondary"
            write: "setSecondary"
            notify: "secondaryChanged"
            index: 1
            isFinal: true
        }
        Property {
            name: "currentColor"
            type: "QColor"
            read: "currentColor"
            write: "setCurrentColor"
            notify: "currentColorChanged"
            index: 2
            isFinal: true
        }
        Property {
            name: "swapSwatch"
            type: "bool"
            read: "swapSwatch"
            notify: "swapSwatchChanged"
            index: 3
            isReadonly: true
            isFinal: true
        }
        Signal { name: "primaryChanged" }
        Signal { name: "secondaryChanged" }
        Signal { name: "currentColorChanged" }
        Signal { name: "swapSwatchChanged" }
        Method {
            name: "setPrimary"
            Parameter { name: "newPrimary"; type: "QColor" }
        }
        Method {
            name: "setSecondary"
            Parameter { name: "newSecondary"; type: "QColor" }
        }
        Method { name: "swap" }
        Method {
            name: "setCurrentColor"
            Parameter { name: "newCurrentColor"; type: "QColor" }
        }
        Method { name: "swapSwatchPlane" }
        Method { name: "reset" }
    }
    Component {
        file: "colorwheel.h"
        name: "ColorWheel"
        accessSemantics: "reference"
        prototype: "QQuickPaintedItem"
        exports: ["v6/ColorWheel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "color"
            type: "QColor"
            read: "color"
            write: "setColor"
            notify: "colorChanged"
            index: 0
            isFinal: true
        }
        Signal { name: "colorChanged" }
        Signal { name: "editFinished" }
        Method {
            name: "setHue"
            Parameter { name: "value"; type: "double" }
        }
    }
    Component {
        file: "qvalidator.h"
        name: "QDoubleValidator"
        accessSemantics: "reference"
        prototype: "QValidator"
        Enum {
            name: "Notation"
            values: ["StandardNotation", "ScientificNotation"]
        }
        Property {
            name: "bottom"
            type: "double"
            read: "bottom"
            write: "setBottom"
            notify: "bottomChanged"
            index: 0
        }
        Property { name: "top"; type: "double"; read: "top"; write: "setTop"; notify: "topChanged"; index: 1 }
        Property {
            name: "decimals"
            type: "int"
            read: "decimals"
            write: "setDecimals"
            notify: "decimalsChanged"
            index: 2
        }
        Property {
            name: "notation"
            type: "Notation"
            read: "notation"
            write: "setNotation"
            notify: "notationChanged"
            index: 3
        }
        Signal {
            name: "bottomChanged"
            Parameter { name: "bottom"; type: "double" }
        }
        Signal {
            name: "topChanged"
            Parameter { name: "top"; type: "double" }
        }
        Signal {
            name: "decimalsChanged"
            Parameter { name: "decimals"; type: "int" }
        }
        Signal {
            name: "notationChanged"
            Parameter { name: "notation"; type: "QDoubleValidator::Notation" }
        }
    }
    Component {
        file: "textfielddoublevalidator.h"
        name: "TextFieldDoubleValidator"
        accessSemantics: "reference"
        prototype: "QDoubleValidator"
        exports: ["v6/TextFieldDoubleValidator 1.0"]
        exportMetaObjectRevisions: [256]
    }
}
